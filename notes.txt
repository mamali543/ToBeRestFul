Spring does indeed have a component scanning mechanism that scans your application's classes and automatically registers beans in the Spring container. This is a key feature of Spring's Inversion of Control (IoC) container.
Let me elaborate on this:

Component Scanning:
Spring's component scanning is a feature that automatically detects and registers Spring beans without requiring explicit bean declarations in XML or Java configuration.

*spring data jpa : simplifies data access layer implementation by reducing boilerplate code,
and it is a framework within the spring ecosystem dedicated to handle the communication between the objects model and the relational databases schema through object-relational-mapping
uses hibernate as its default jpa implementation

openssl rand -hex 32

1. URL-based security in SecurityConfig
2. Method-level security with @PreAuthorize annotations
The combination of both provides robust security, allowing you to control
access to different parts of your application based on both the URL and the
user's role.

Session based authentication
JWT based authentication

stateful : the request share the same session context
stateless : the request is independent of each other

JWT is stateless
Session is stateful